#!/usr/bin/env node

var program = require('commander');
var path = require('path');
var fs = require('fs');
var exec = require('child_process').exec;

var db = path.join(__dirname, '../db');
var migrations = path.join(db , 'migrations');

program
.version('0.0.1')
.arguments('<file>')
.option('-f --file <file>', 'run migration from specific file')
.option('-A, --all', 'run all migrations in db/migrations')
.parse(process.argv)



if (program.all) {
	fs.readdir(migrations, function (err, files) {
		var sqlFiles = [];
		files.forEach(function (f) {
			if (path.extname(f) === '.sql') {
				sqlFiles.push(path.join(migrations, f));
			}
		});
		sqlFiles.forEach(function (p) {
			exec(`psql -d file_repo -f ${f}`, function (err, stdout, stderr) {
				console.log(stdout);
				console.log(stderr);
				if (err !== null) {
					console.log(err);
				}
			});
		});
	});
} else {
	var sqlFile = path.join(migrations, process.argv[2]);
	exec(`psql -d file_repo -f ${sqlFile}`, function (err, stdout, stderr) {
		console.log(stdout);
		console.log(stderr);
		if (err !== null) {
			console.log(err);
		}
		var timestamp = new Date();
		timestamp = Math.floor(timestamp/1000);
		var schemaFile = path.join(db, timestamp + '_schema.sql');
		exec(`pg_dump -s file_repo > ${schemaFile}`, function (err, stdout, stderr) {
			console.log(stdout);
			console.log(stderr);
			if (err !== null) {
				console.log(err);
			};
		})
	});
}


;

